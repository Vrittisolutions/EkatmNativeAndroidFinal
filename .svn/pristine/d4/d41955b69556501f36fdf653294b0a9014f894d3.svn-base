package com.vritti.sales.CounterBilling;

import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Color;
import android.os.Build;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.widget.Button;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.vritti.databaselib.data.DatabaseHandlers;
import com.vritti.databaselib.other.Utility;
import com.vritti.databaselib.other.WebUrlClass;
import com.vritti.ekatm.R;
import com.vritti.sales.adapters.AdapterCBillingList;
import com.vritti.sales.adapters.PrintBillDetailsAdapter;
import com.vritti.sales.beans.BillNoClass;
import com.vritti.sales.beans.CounterbillingBean;
import com.vritti.sales.beans.NonPrintedBill_Fragment;
import com.vritti.sales.beans.Tbuds_commonFunctions;
import com.vritti.vwb.CommonClass.AppCommon;

import java.util.ArrayList;

public class PrintedBillDetailsActivity extends AppCompatActivity {
    private Context parent;

    Button btn_print;
    ListView list_printedBills;
    TextView txtTotalincltax, txtbaseamount, txtcgstamt, txtsgstamt, txtNetAmt, txtTotalDiscount, txtpaybleamt,txtbillno;

    static Tbuds_commonFunctions tcf;
    Utility ut;
    static SQLiteDatabase sql_db;
    DatabaseHandlers dbhandler;
    ProgressBar mprogress;
    String PlantMasterId = "", LoginId = "", Password = "", CompanyURL = "", EnvMasterId = "",
            UserMasterId = "", UserName = "", MobileNo = "", Sourcetype = "";
    Toolbar toolbar;

    String billno, billDate, intentFrom;
    ArrayList<CounterbillingBean> listdetails;
    ArrayList<CounterbillingBean> cbillList;

    PrintBillDetailsAdapter billadapter;
    BillNoClass billNoClass;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.tbuds_activity_printed_bill_details);

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        toolbar.setTitle("Counter Billing");

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            //  activity.getWindow().setStatusBarColor(darkenColor(ContextCompat.getColor(activity, color)));
            this.getWindow().setStatusBarColor(Color.parseColor("#ff4112"));
        }

        init();

        getDataFromDatabase();

        setListeners();
    }


    public void init(){
        parent = PrintedBillDetailsActivity.this;

        toolbar = (Toolbar) findViewById(R.id.toolbar1);
        // toolbar.setLogo(R.mipmap.ic_toolbar_logo_vwb);  //attach sales logo
        toolbar.setTitle("Bill Details");
        toolbar.setTitleTextColor(Color.WHITE);
        setSupportActionBar(toolbar);

        list_printedBills = (ListView)findViewById(R.id.list_bill);
        txtTotalincltax = (TextView)findViewById(R.id.txtTotalincltax);
        txtbaseamount = (TextView)findViewById(R.id.txtbaseamount);
        txtcgstamt = (TextView)findViewById(R.id.txtcgstamt);
        txtsgstamt = (TextView)findViewById(R.id.txtsgstamt);
        txtNetAmt = (TextView)findViewById(R.id.txtNetAmt);
        txtTotalDiscount = (TextView)findViewById(R.id.txtTotalDiscount);
        txtpaybleamt = (TextView)findViewById(R.id.txtpaybleamt);
        btn_print = (Button)findViewById(R.id.btn_print);
        btn_print.setVisibility(View.GONE);
        txtbillno = (TextView)findViewById(R.id.txtbillno);

        ut = new Utility();
        tcf = new Tbuds_commonFunctions(PrintedBillDetailsActivity.this);
        String settingKey = ut.getSharedPreference_SettingKey(this);
        String dabasename = ut.getValue(this, WebUrlClass.GET_DATABASE_NAME_KEY, settingKey);
        dbhandler = new DatabaseHandlers(this, dabasename);
        sql_db = dbhandler.getWritableDatabase();
        CompanyURL = ut.getValue(this, WebUrlClass.GET_COMPANY_URL_KEY, settingKey);
        EnvMasterId = ut.getValue(this, WebUrlClass.GET_EnvMasterID_KEY, settingKey);
        PlantMasterId = ut.getValue(this, WebUrlClass.GET_PlantID_KEY, settingKey);
        LoginId = ut.getValue(this, WebUrlClass.GET_LOGIN_KEY, settingKey);
        Password = ut.getValue(this, WebUrlClass.GET_PSW_KEY, settingKey);
        UserMasterId = ut.getValue(this, WebUrlClass.GET_USERMASTERID_KEY, settingKey);
        UserName = ut.getValue(this, WebUrlClass.GET_USERNAME_KEY, settingKey);
        //FirmMobile = ut.getValue(this, WebUrlClass.GET_MOBILE_KEY, settingKey).trim();

        Intent intent = getIntent();
        intentFrom = intent.getStringExtra("IntentFrom");
        billno = intent.getStringExtra("BillNo");
        billDate = intent.getStringExtra("BillDate");

        txtbillno.setText(billno);

        if(intentFrom.equalsIgnoreCase("NonPrintedBills")){
            btn_print.setVisibility(View.VISIBLE);
        }else if(intentFrom.equalsIgnoreCase("PrintedBills")){
            btn_print.setVisibility(View.GONE);
        }

        listdetails = new ArrayList<CounterbillingBean>();
        cbillList = new ArrayList<CounterbillingBean>();
        billNoClass = new BillNoClass();

    }

    public void setListeners(){

        btn_print.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getItmsListDataForBilling();
            }
        });

    }

    public void getDataFromDatabase(){
        listdetails.clear();

        String itemdesc,rate,qty, itemdiscamt, cgstLine, sgstLine, totalLineAmt, total_inclTax, netAmount, payableAmount, itemCode, taxclass;
        Float lineamt = 0.0F, discount= 0.0F, discountedLineAmt = 0.0F;
        float baseAmount = 0.0F, totalCGST =0.0F, totalSGST = 0.0F, discAmount=0.0F, TaxinRupsTotalBill = 0.0F;

        String query_ = "SELECT DISTINCT FinalTotalBill, TotalWithDiscountBill,TaxinRupsTotalBill, CGSTTotal, SGSTTotal,DiscOnNetAmtRS, " +
                "PayableAmt FROM "+ dbhandler.TABLE_BILL_CB + " WHERE BillPrintNo="+billno;
        Cursor c_ = sql_db.rawQuery(query_,null);
        if(c_.getCount() > 0){
            c_.moveToFirst();
            do{
                total_inclTax = c_.getString(c_.getColumnIndex("FinalTotalBill"));
                netAmount = c_.getString(c_.getColumnIndex("FinalTotalBill"));
                baseAmount = Float.parseFloat(c_.getString(c_.getColumnIndex("TotalWithDiscountBill")));
                TaxinRupsTotalBill = Float.parseFloat(c_.getString(c_.getColumnIndex("TaxinRupsTotalBill")));
                discAmount = Float.parseFloat(c_.getString(c_.getColumnIndex("DiscOnNetAmtRS")));
                payableAmount = c_.getString(c_.getColumnIndex("PayableAmt"));

            }while (c_.moveToNext());

            totalCGST = TaxinRupsTotalBill/2;
            totalSGST = TaxinRupsTotalBill/2;

            txtTotalincltax.setText(total_inclTax);
            txtNetAmt.setText(total_inclTax);
            txtbaseamount.setText(String.format("%.02f",baseAmount));
            txtcgstamt.setText(String.format("%.02f",totalCGST));
            txtsgstamt.setText(String.format("%.02f",totalSGST));
            txtTotalDiscount.setText(String.format("%.02f",discAmount));
            txtpaybleamt.setText(payableAmount);

        }else {

        }

        /* lineamt, taxinrups, disctotal*/
        String query = "SELECT Itemid, ItemName, Rate, Qty, cgstLine,sgstLine, DiscLineAmt,ItemDiscount, Amount,TaxClass, * FROM "
                + dbhandler.TABLE_BILL_CB + " WHERE BillPrintNo="+billno;
        Cursor c = sql_db.rawQuery(query,null);
        if(c.getCount() > 0){
            c.moveToFirst();
            do{
                itemCode =  c.getString(c.getColumnIndex("Itemid"));
                itemdesc = c.getString(c.getColumnIndex("ItemName"));
                qty = c.getString(c.getColumnIndex("Qty"));
                rate = c.getString(c.getColumnIndex("Rate"));
                float L_Amt = Float.parseFloat(qty) * Float.parseFloat(rate);
                lineamt = L_Amt;
                discount = Float.parseFloat(c.getString(c.getColumnIndex("ItemDiscount")));
                taxclass = c.getString(c.getColumnIndex("TaxClass"));

                totalLineAmt = c.getString(c.getColumnIndex("Amount"));
                itemdiscamt = c.getString(c.getColumnIndex("DiscLineAmt"));
                discountedLineAmt = lineamt - Float.parseFloat(itemdiscamt);            //getDicountedTotal
                cgstLine = c.getString(c.getColumnIndex("cgstLine"));
                sgstLine = c.getString(c.getColumnIndex("sgstLine"));

                //getTax_inRups
                Float tottax = Float.parseFloat(cgstLine) + Float.parseFloat(sgstLine);
                Float taxinRS =  discountedLineAmt * tottax/100;
                Float tot_incltax = discountedLineAmt + taxinRS;

                CounterbillingBean cbean = new CounterbillingBean();
                cbean.setItemCode(itemCode);
                cbean.setItemDesc(itemdesc);
                cbean.setQty(qty);
                cbean.setMRP(Float.parseFloat(rate));
                cbean.setLineamt(lineamt);
                cbean.setDiscount(discount);
                cbean.setTaxclass(taxclass);
                cbean.setTax_inRups(String.valueOf(taxinRS));
                cbean.setTotAmt_incltax_lineamt(tot_incltax);
                cbean.setTotAmt_incltax_lineamt(Float.parseFloat(totalLineAmt));
                cbean.setDiscamt(Float.parseFloat(itemdiscamt));
                cbean.setDicountedTotal(discountedLineAmt);
                cbean.setCgstLine(cgstLine);
                cbean.setSgstLine(sgstLine);

                listdetails.add(cbean);

            }while (c.moveToNext());

        }else {

        }

        if(listdetails.isEmpty()){
            Toast.makeText(parent, "No pending bills to show",Toast.LENGTH_SHORT).show();
        }else {
            billadapter = new PrintBillDetailsAdapter(this, listdetails);
            list_printedBills.setAdapter(billadapter);
        }

    }

    public void getItmsListDataForBilling() {
        cbillList.clear();

        for(int i=0; i< listdetails.size(); i++){

            CounterbillingBean cbean = new CounterbillingBean();
            cbean.setItemCode(listdetails.get(i).getItemCode());
            cbean.setItemDesc(listdetails.get(i).getItemDesc());
            cbean.setQty(listdetails.get(i).getQty());
            cbean.setMRP(listdetails.get(i).getMRP());
            cbean.setLineamt(listdetails.get(i).getLineamt());
            cbean.setDiscount(listdetails.get(i).getDiscount());
            cbean.setTaxclass(listdetails.get(i).getTaxclass());
            cbean.setTax_inRups(listdetails.get(i).getTax_inRups());
            //cbean.setDiscinrupees(listdetails.get(i).getDiscamt());
            cbean.setTotAmt_incltax_lineamt(listdetails.get(i).getTotAmt_incltax_lineamt());
            cbean.setDiscamt(listdetails.get(i).getDiscamt());
            cbean.setDicountedTotal(listdetails.get(i).getDicountedTotal());

            cbillList.add(cbean);
        }

        billNoClass.setBillNo(billno);
        billNoClass.setCbillList(cbillList);
        String billingObj = new Gson().toJson(billNoClass);
        AppCommon.getInstance(this).setBillingObject(billingObj);

        Intent intent = new Intent(this, ItemListCB.class);
     //   intent.putExtra("intentFrom", "PrintedBillDetailsActivity");
        startActivity(intent);
        finish();
    }

    @Override
    protected void onRestart() {
        super.onRestart();
        super.finish();
    }
}
