package com.vritti.crm.vcrm7;

import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.ProgressBar;

import com.vritti.crm.classes.CommonFunctionCrm;
import com.vritti.databaselib.data.DatabaseHandlers;
import com.vritti.databaselib.other.Utility;
import com.vritti.databaselib.other.WebUrlClass;
import com.vritti.ekatm.R;
import com.vritti.sessionlib.CallbackInterface;
import com.vritti.sessionlib.StartSession;
import com.vritti.vwb.vworkbench.DatasheetMainActivity;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.Random;
import java.util.UUID;

public class CommonDatasheetMainActivity extends AppCompatActivity {
    String PlantMasterId = "", LoginId = "", Password = "", CompanyURL = "", EnvMasterId = "",
            UserMasterId = "", UserName = "", MobileNo = "";
    Utility ut;
    DatabaseHandlers db;
    CommonFunctionCrm cf;


    public static Context context;
    SQLiteDatabase sql;
    ProgressBar progress_bar;
    String prospectId, cssFormId, sourceType = "", finalJson = "", cssFormDesc = "";

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.common_datasheetmain_activity);
        context = CommonDatasheetMainActivity.this;

        ut = new Utility();
        cf = new CommonFunctionCrm(context);
        String settingKey = ut.getSharedPreference_SettingKey(context);
        String dabasename = ut.getValue(context, WebUrlClass.GET_DATABASE_NAME_KEY, settingKey);
        db = new DatabaseHandlers(context, dabasename);
        CompanyURL = ut.getValue(context, WebUrlClass.GET_COMPANY_URL_KEY, settingKey);
        EnvMasterId = ut.getValue(context, WebUrlClass.GET_EnvMasterID_KEY, settingKey);
        PlantMasterId = ut.getValue(context, WebUrlClass.GET_PlantID_KEY, settingKey);
        LoginId = ut.getValue(context, WebUrlClass.GET_LOGIN_KEY, settingKey);
        Password = ut.getValue(context, WebUrlClass.GET_PSW_KEY, settingKey);
        UserMasterId = ut.getValue(context, WebUrlClass.GET_USERMASTERID_KEY, settingKey);
        UserName = ut.getValue(context, WebUrlClass.GET_USERNAME_KEY, settingKey);
        sql = db.getWritableDatabase();

        InitView();

        if (getIntent() != null) {
            prospectId = getIntent().getStringExtra("PropectId");
            cssFormId = getIntent().getStringExtra("CssFormId");
            sourceType = getIntent().getStringExtra("Sourcetype");
            cssFormDesc = getIntent().getStringExtra("FormDesc");


            JSONObject jsonObject = new JSONObject();
            try {
                jsonObject.put("PKCssHeaderId", "");
                jsonObject.put("FKCustomerId", "");
                jsonObject.put("FKCssFormsId", cssFormId);
                // jsonObject.put("FKCssFormsId", "52ccea06-d0fb-4422-b908-200fd830a35a");
                jsonObject.put("FKFeedbackById", "");
                jsonObject.put("FeedBackDate", "");
                jsonObject.put("FeedBackCallId", "");
                jsonObject.put("Notes", "");
                jsonObject.put("IsRequestToCustomer", "");
                jsonObject.put("IsRequestSentTo", "");
                jsonObject.put("MailFormatId", "");
                jsonObject.put("FKDatasheetSchId", "");
                jsonObject.put("FreqDescriptor", "");
                jsonObject.put("FKActivityId", "");
                jsonObject.put("Status", "");
                jsonObject.put("ScheduleDate", "");
                jsonObject.put("AllowDatasheetEntryOn", "");
                jsonObject.put("SaveActivityAction", "");
                jsonObject.put("SourceType", sourceType);
                jsonObject.put("SourceId", prospectId);
                //  jsonObject.put("SourceId", "b7b5ace7-4bb8-4fdd-ae7e-b005c2");
            } catch (JSONException e) {
                e.printStackTrace();
            }
            finalJson = jsonObject.toString();


            if (ut.isNet(CommonDatasheetMainActivity.this)) {
                new StartSession(CommonDatasheetMainActivity.this, new CallbackInterface() {
                    @Override
                    public void callMethod() {
                        new CheckPOSTCSSDetails().execute(finalJson);
                    }

                    @Override
                    public void callfailMethod(String msg) {

                    }
                });
            }
        }

    }

    private void InitView() {
        progress_bar = findViewById(R.id.progress_bar);
    }

    private class CheckPOSTCSSDetails extends AsyncTask<String, Void, String> {

        Object res;
        String response = "";
        //ProgressBar progressBar;

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            progress_bar.setVisibility(View.VISIBLE);

        }

        @Override
        protected String doInBackground(String... params) {
            String finaljson = params[0];
            // String url = CompanyURL + WebUrlClass.api_Datasheet_CheckPOSTCSSDetails;
            String url = CompanyURL + WebUrlClass.api_Datasheet_CheckPOSTCSSData;
            res = ut.OpenPostConnection(url, finaljson, CommonDatasheetMainActivity.this);
            try {

                if (res != null) {
                    response = res.toString();
                   /* response = res.toString().replaceAll("\\\\", "");
                    response = response.replaceAll("\\\\\\\\/", "");
                    response = response.substring(1, response.length() - 1);*/
                } else {
                    response = "error";
                }

            } catch (Exception e) {
                e.printStackTrace();
                response = "error";
            }
            return response;
        }

        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);
            progress_bar.setVisibility(View.GONE);

            if (response.equals("[]")) {
                String guid = UUID.randomUUID().toString();

            } else {

                try {
                    JSONObject jsonObject = new JSONObject(response);
                    JSONArray cssdetails = jsonObject.getJSONArray("CSSDetails");

                    ContentValues values = new ContentValues();
                    sql.delete(db.TABLE_DATASHEET_DATA_NEW, null,
                            null);
                    Cursor c = sql.rawQuery("SELECT * FROM " + db.TABLE_DATASHEET_DATA_NEW, null);
                    int count = c.getCount();
                    String columnName, columnValue;

                    for (int i = 0; i < cssdetails.length(); i++) {
                        JSONObject jorder = cssdetails.getJSONObject(i);
                        String headerId = jorder.getString("PKCssHeaderId");
                        for (int j = 0; j < c.getColumnCount(); j++) {
                            columnName = c.getColumnName(j);

                            /*  if (columnName.equalsIgnoreCase("SourceId")) {
                                columnValue = prospectId;
                            } else */
                            if (columnName.equalsIgnoreCase("FKCssFormsId")) {
                                columnValue = cssFormId;
                            } else if (columnName.equalsIgnoreCase("FKCustomerId")) {
                                columnValue = "";
                            } else {
                                columnValue = jorder.getString(columnName);
                            }
                            values.put(columnName, columnValue);
                        }
                        long a = sql.insert(db.TABLE_DATASHEET_DATA_NEW, null, values);
                    }

                } catch (JSONException e) {
                    e.printStackTrace();
                }

                Intent intent = new Intent(CommonDatasheetMainActivity.this, EditDatasheetActivityMainNew.class);
                intent.putExtra("PropectId", prospectId);
                intent.putExtra("CssFormId", cssFormId);
                intent.putExtra("Sourcetype", sourceType);
                intent.putExtra("FormDesc", cssFormDesc);
                startActivity(intent);




            }
        }
    }
}
