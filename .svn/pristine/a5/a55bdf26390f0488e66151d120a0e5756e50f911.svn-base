package com.vritti.vwb.vworkbench;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.util.Log;
import android.widget.ImageView;
import android.widget.Toast;

import com.facebook.drawee.view.SimpleDraweeView;
import com.vritti.databaselib.other.Utility;
import com.vritti.databaselib.other.WebUrlClass;
import com.vritti.ekatm.R;
import com.vritti.sessionlib.CallbackInterface;
import com.vritti.sessionlib.StartSession;
import com.vritti.vwb.CommonClass.AppCommon;

import java.io.File;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class FullImageClass extends Activity {

    @BindView(R.id.fullImage)
    SimpleDraweeView fullImage;
    String imageUri, selecteId;
    Context context = FullImageClass.this;
    String PlantMasterId = "", LoginId = "", Password = "", CompanyURL = "", EnvMasterId = "",
            UserMasterId = "", UserName = "", activityId;
    Utility ut;
    ProgressDialog dialog;
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.full_image);
        ButterKnife.bind(this);
        ut = new Utility();
        String settingKey = ut.getSharedPreference_SettingKey(context);
        CompanyURL = ut.getValue(context, WebUrlClass.GET_COMPANY_URL_KEY, settingKey);
        EnvMasterId = ut.getValue(context, WebUrlClass.GET_EnvMasterID_KEY, settingKey);
        if (getIntent() != null) {
            imageUri = getIntent().getStringExtra("imageUrl");
            Uri uri = Uri.parse(getIntent().getStringExtra("imageUrl"));
            fullImage.setImageURI(uri);
        }


    }

    @OnClick(R.id.deleteImage)
    void delete() {
        String[] image = imageUri.split("_");
        selecteId = image[1].replace("%22" , "");
        if (selecteId != null)
            callApi();
    }

    private void callApi() {
         dialog = ProgressDialog.show(context, "Loading", "Please wait...", true);
        //dialog.dismiss();
        //dialog1.dismiss();
        if (AppCommon.getInstance(context).isConnectingToInternet(context)) {
            new StartSession(FullImageClass.this, new CallbackInterface() {
                @Override
                public void callMethod() {

                    new DeleteAttachmentApi().execute();
                }

                @Override
                public void callfailMethod(String msg) {
                    // ((NotificationActivity)context).showPopUp(false);
                }
            });
        } else
            Toast.makeText(context, "Please check your internet connection", Toast.LENGTH_SHORT).show();


    }

    private class DeleteAttachmentApi extends AsyncTask<String, Void, String> {
        Object res;
        String response = "error";

        @Override
        protected void onPreExecute() {
            super.onPreExecute();

        }

        @Override
        protected String doInBackground(String... strings) {

            String url = null;
           // String attachId = attachmentList.get(selectedPos).getAttachGuid();
            String api_deleteAttachment = "/api/UploadFilesAPI/POSTDeleteAttachment";
            url = CompanyURL + api_deleteAttachment + "?Attachid=" + selecteId;

            try {
                res = ut.OpenPostConnection(url, "", getApplicationContext());
                response = res.toString().replaceAll("\\\\", "");
                response = response.substring(1, response.length() - 1);

            } catch (Exception e) {
                e.printStackTrace();
                response = "error";
            }

            return response;
        }


        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);
            dialog.dismiss();
            Log.i("deleteResponse", response);
            if (!response.equals("error")) {
                Toast.makeText(context, response, Toast.LENGTH_SHORT).show();

                File fdelete = new File(Uri.parse(imageUri).getPath());
                if (fdelete.exists()) {
                    if (fdelete.delete()) {
                        System.out.println("file Deleted :");
                        Toast.makeText(context, response, Toast.LENGTH_SHORT).show();
                    } else {
                        System.out.println("file not Deleted :" );
                    }

                    onBackPressed();
                }
            }

        }
    }

}
