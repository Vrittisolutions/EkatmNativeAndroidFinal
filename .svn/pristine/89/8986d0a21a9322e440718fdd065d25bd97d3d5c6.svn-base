package com.vritti.sales.adapters;

import android.content.Context;
import android.graphics.Color;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.vritti.ekatm.R;
import com.vritti.sales.beans.ShipmentEntryBean;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

public class PendingDeliveryAdapter extends BaseAdapter {

    private Context parent;
    static ArrayList<ShipmentEntryBean> lstPending_Deliveries;
    private LayoutInflater mInflater;
    private ViewHolder holder = null;

    public PendingDeliveryAdapter(Context context, ArrayList<ShipmentEntryBean> listpending) {
        this.parent = context;
        this.lstPending_Deliveries = listpending;
        mInflater = LayoutInflater.from(parent);
    }

    @Override
    public int getCount() {
        return lstPending_Deliveries.size();
    }

    @Override
    public Object getItem(int position) {
        return lstPending_Deliveries.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {

        if (convertView == null) {

            convertView = mInflater.inflate(R.layout.tbuds_pending_deliveries, null);
            holder = new ViewHolder();

            holder.laydata = (LinearLayout)convertView.findViewById(R.id.laydata);
            holder.txtcustname = (TextView)convertView.findViewById(R.id.txtcustname);
            holder.txtexpdeldate = (TextView)convertView.findViewById(R.id.txtexpdeldate);
            holder.txtinvoiceno = (TextView)convertView.findViewById(R.id.txtinvoiceno);
            holder.txtinvoicedate = (TextView)convertView.findViewById(R.id.txtinvoicedate);
            holder.txtaddress = (TextView)convertView.findViewById(R.id.txtaddress);

            convertView.setTag(holder);

        } else {
            holder = (ViewHolder) convertView.getTag();
        }

        if (position % 2 == 1) {
            holder.laydata.setBackgroundColor(Color.parseColor("#EDEDED"));
        } else {
            holder.laydata.setBackgroundColor(Color.parseColor("#FFFFFF"));
        }

        holder.txtcustname.setText(lstPending_Deliveries.get(position).getConsignee());
        holder.txtexpdeldate.setText(Convertdate(lstPending_Deliveries.get(position).getScheduleDate()));
        holder.txtinvoiceno.setText(lstPending_Deliveries.get(position).getInvoiceNo());
        holder.txtinvoicedate.setText(Convertdate(lstPending_Deliveries.get(position).getInvoiceDate()));
        holder.txtaddress.setText(lstPending_Deliveries.get(position).getDeliveryAddress());

        return convertView;
    }

    class ViewHolder{
        TextView txtcustname, txtexpdeldate, txtinvoiceno, txtinvoicedate, txtaddress;
        LinearLayout laydata;
    }

    public String Convertdate(String date){
        String DateToStr = "";

        SimpleDateFormat Format = new SimpleDateFormat("dd MMM hh:mm a");//Feb 23 2016 12:16PM
        SimpleDateFormat format_new = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        Date d1 = null;
        try {
            d1 = format_new.parse(date);
            DateToStr = Format.format(d1);
            System.out.println(DateToStr);

        } catch (ParseException e) {
            e.printStackTrace();
        }

        return DateToStr;
    }

    public String Convertdate_2(String date){
        String DateToStr = "";

        SimpleDateFormat Format = new SimpleDateFormat("dd MMM hh:mm a");//Feb 23 2016 12:16PM
        SimpleDateFormat format = new SimpleDateFormat("dd MMM yyyy, hh:mm a");
        Date d1 = null;
        try {
            d1 = format.parse(date);
            DateToStr = Format.format(d1);
            System.out.println(DateToStr);

        } catch (ParseException e) {
            e.printStackTrace();
        }

        return DateToStr;
    }

}
