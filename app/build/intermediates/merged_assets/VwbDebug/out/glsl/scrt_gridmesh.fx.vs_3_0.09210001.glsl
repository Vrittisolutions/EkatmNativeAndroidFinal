struct sGridParams {
  highp vec4 ContourScale;
  highp vec4 ContourOffset;
  highp vec4 ContourThickness;
  highp vec4 ContourColorX;
  highp vec4 ContourColorY;
  highp vec4 ContourColorZ;
  highp vec4 Params;
  highp vec4 SurfaceNormal;
  highp vec4 Lighting;
};
uniform highp mat4 matProj;
uniform highp mat4 matWorld;
uniform highp mat4 matWorldView;
uniform sampler2D HeightMapTexture;
uniform highp vec4 TextureDimensionsInv;
uniform highp vec4 MeshCellOfssetScalePosition;
uniform highp vec4 MeshCellOfssetScaleTexCoord;
uniform highp vec4 MeshCellOfssetScaleHeights;
uniform highp vec4 ClipPlanes[6];
uniform sGridParams GridParams;
attribute highp vec4 vPosition;
attribute highp vec4 vTexCoord0;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD5;
varying highp float xlv_TEXCOORD6;
varying highp vec4 xlv_TEXCOORD7;
varying highp vec4 xlv_COLOR4;
varying highp vec2 xlv_COLOR5;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_1.w = vPosition.w;
  tmpvar_2.zw = vTexCoord0.zw;
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  highp vec4 tmpvar_6;
  highp vec4 tmpvar_7;
  highp vec2 tmpvar_8;
  highp mat4 tmpvar_9;
  tmpvar_9 = (matWorldView * matProj);
  tmpvar_1.xz = ((vPosition.xz * MeshCellOfssetScalePosition.xy) + MeshCellOfssetScalePosition.zw);
  highp vec2 _texCoord_10;
  _texCoord_10 = ((vTexCoord0.xy * MeshCellOfssetScaleTexCoord.xy) + MeshCellOfssetScaleTexCoord.zw);
  _texCoord_10 = mix (TextureDimensionsInv.xy, TextureDimensionsInv.zw, _texCoord_10);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2DLod (HeightMapTexture, _texCoord_10, 0.0);
  tmpvar_1.y = (tmpvar_11.x * vPosition.w);
  highp vec3 tmpvar_12;
  highp vec3 sampledNormal_13;
  highp vec3 tmpvar_14;
  tmpvar_14.z = 0.0;
  tmpvar_14.xy = TextureDimensionsInv.xy;
  highp float tmpvar_15;
  highp vec2 _texCoord_16;
  _texCoord_16 = (vTexCoord0.xy - tmpvar_14.xz);
  _texCoord_16 = ((_texCoord_16 * MeshCellOfssetScaleTexCoord.xy) + MeshCellOfssetScaleTexCoord.zw);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2DLod (HeightMapTexture, _texCoord_16, 0.0);
  tmpvar_15 = tmpvar_17.x;
  highp float tmpvar_18;
  highp vec2 _texCoord_19;
  _texCoord_19 = (vTexCoord0.xy + tmpvar_14.xz);
  _texCoord_19 = ((_texCoord_19 * MeshCellOfssetScaleTexCoord.xy) + MeshCellOfssetScaleTexCoord.zw);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DLod (HeightMapTexture, _texCoord_19, 0.0);
  tmpvar_18 = tmpvar_20.x;
  highp float tmpvar_21;
  highp vec2 _texCoord_22;
  _texCoord_22 = (vTexCoord0.xy - tmpvar_14.zy);
  _texCoord_22 = ((_texCoord_22 * MeshCellOfssetScaleTexCoord.xy) + MeshCellOfssetScaleTexCoord.zw);
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2DLod (HeightMapTexture, _texCoord_22, 0.0);
  tmpvar_21 = tmpvar_23.x;
  highp float tmpvar_24;
  highp vec2 _texCoord_25;
  _texCoord_25 = (vTexCoord0.xy + tmpvar_14.zy);
  _texCoord_25 = ((_texCoord_25 * MeshCellOfssetScaleTexCoord.xy) + MeshCellOfssetScaleTexCoord.zw);
  lowp vec4 tmpvar_26;
  tmpvar_26 = texture2DLod (HeightMapTexture, _texCoord_25, 0.0);
  tmpvar_24 = tmpvar_26.x;
  sampledNormal_13.x = (((tmpvar_15 * MeshCellOfssetScaleHeights.x) + MeshCellOfssetScaleHeights.y) - ((tmpvar_18 * MeshCellOfssetScaleHeights.x) + MeshCellOfssetScaleHeights.y));
  sampledNormal_13.y = 2.0;
  sampledNormal_13.z = (((tmpvar_21 * MeshCellOfssetScaleHeights.x) + MeshCellOfssetScaleHeights.y) - ((tmpvar_24 * MeshCellOfssetScaleHeights.x) + MeshCellOfssetScaleHeights.y));
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize(sampledNormal_13);
  sampledNormal_13 = tmpvar_27;
  highp mat3 tmpvar_28;
  tmpvar_28[0] = matWorld[0].xyz;
  tmpvar_28[1] = matWorld[1].xyz;
  tmpvar_28[2] = matWorld[2].xyz;
  tmpvar_12 = (tmpvar_27 * tmpvar_28);
  highp vec2 _texCoord_29;
  _texCoord_29 = ((vTexCoord0.zw * MeshCellOfssetScaleTexCoord.xy) + MeshCellOfssetScaleTexCoord.zw);
  _texCoord_29 = mix (TextureDimensionsInv.xy, TextureDimensionsInv.zw, _texCoord_29);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2DLod (HeightMapTexture, _texCoord_29, 0.0);
  highp float tmpvar_31;
  tmpvar_31 = GridParams.Params.w;
  highp float tmpvar_32;
  tmpvar_32 = mix (tmpvar_1.y, (tmpvar_30.x * vPosition.w), tmpvar_31);
  tmpvar_2.xy = mix (vTexCoord0.xy, vTexCoord0.zw, vec2(tmpvar_31));
  tmpvar_6 = tmpvar_2;
  tmpvar_2.xy = clamp (tmpvar_2.xy, 0.0, 1.0);
  tmpvar_2.xy = mix (TextureDimensionsInv.xy, TextureDimensionsInv.zw, tmpvar_2.xy);
  tmpvar_2.xy = ((tmpvar_2.xy * MeshCellOfssetScaleTexCoord.xy) + MeshCellOfssetScaleTexCoord.zw);
  tmpvar_1.y = ((tmpvar_1.y * MeshCellOfssetScaleHeights.x) + MeshCellOfssetScaleHeights.y);
  tmpvar_5 = tmpvar_1;
  tmpvar_1.xz = tmpvar_1.xz;
  highp vec4 tmpvar_33;
  tmpvar_33 = (tmpvar_1 * matWorld);
  bvec4 tmpvar_34;
  tmpvar_34 = bvec4(ClipPlanes[0]);
  bool tmpvar_35;
  tmpvar_35 = any(tmpvar_34);
  highp float tmpvar_36;
  if (tmpvar_35) {
    highp vec4 tmpvar_37;
    tmpvar_37.w = 1.0;
    tmpvar_37.xyz = tmpvar_33.xyz;
    tmpvar_36 = dot (tmpvar_37, ClipPlanes[0]);
  } else {
    tmpvar_36 = 1.0;
  };
  tmpvar_7.x = tmpvar_36;
  bvec4 tmpvar_38;
  tmpvar_38 = bvec4(ClipPlanes[1]);
  bool tmpvar_39;
  tmpvar_39 = any(tmpvar_38);
  highp float tmpvar_40;
  if (tmpvar_39) {
    highp vec4 tmpvar_41;
    tmpvar_41.w = 1.0;
    tmpvar_41.xyz = tmpvar_33.xyz;
    tmpvar_40 = dot (tmpvar_41, ClipPlanes[1]);
  } else {
    tmpvar_40 = 1.0;
  };
  tmpvar_7.y = tmpvar_40;
  bvec4 tmpvar_42;
  tmpvar_42 = bvec4(ClipPlanes[2]);
  bool tmpvar_43;
  tmpvar_43 = any(tmpvar_42);
  highp float tmpvar_44;
  if (tmpvar_43) {
    highp vec4 tmpvar_45;
    tmpvar_45.w = 1.0;
    tmpvar_45.xyz = tmpvar_33.xyz;
    tmpvar_44 = dot (tmpvar_45, ClipPlanes[2]);
  } else {
    tmpvar_44 = 1.0;
  };
  tmpvar_7.z = tmpvar_44;
  bvec4 tmpvar_46;
  tmpvar_46 = bvec4(ClipPlanes[3]);
  bool tmpvar_47;
  tmpvar_47 = any(tmpvar_46);
  highp float tmpvar_48;
  if (tmpvar_47) {
    highp vec4 tmpvar_49;
    tmpvar_49.w = 1.0;
    tmpvar_49.xyz = tmpvar_33.xyz;
    tmpvar_48 = dot (tmpvar_49, ClipPlanes[3]);
  } else {
    tmpvar_48 = 1.0;
  };
  tmpvar_7.w = tmpvar_48;
  bvec4 tmpvar_50;
  tmpvar_50 = bvec4(ClipPlanes[4]);
  bool tmpvar_51;
  tmpvar_51 = any(tmpvar_50);
  highp float tmpvar_52;
  if (tmpvar_51) {
    highp vec4 tmpvar_53;
    tmpvar_53.w = 1.0;
    tmpvar_53.xyz = tmpvar_33.xyz;
    tmpvar_52 = dot (tmpvar_53, ClipPlanes[4]);
  } else {
    tmpvar_52 = 1.0;
  };
  tmpvar_8.x = tmpvar_52;
  bvec4 tmpvar_54;
  tmpvar_54 = bvec4(ClipPlanes[5]);
  bool tmpvar_55;
  tmpvar_55 = any(tmpvar_54);
  highp float tmpvar_56;
  if (tmpvar_55) {
    highp vec4 tmpvar_57;
    tmpvar_57.w = 1.0;
    tmpvar_57.xyz = tmpvar_33.xyz;
    tmpvar_56 = dot (tmpvar_57, ClipPlanes[5]);
  } else {
    tmpvar_56 = 1.0;
  };
  tmpvar_8.y = tmpvar_56;
  tmpvar_1.w = 1.0;
  tmpvar_3 = (tmpvar_1 * tmpvar_9);
  tmpvar_4.xy = tmpvar_2.xy;
  tmpvar_4.zw = tmpvar_2.zw;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_12;
  xlv_TEXCOORD4 = (tmpvar_1 * matWorld);
  xlv_TEXCOORD5 = tmpvar_3;
  xlv_TEXCOORD6 = tmpvar_32;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR4 = tmpvar_7;
  xlv_COLOR5 = tmpvar_8;
}

