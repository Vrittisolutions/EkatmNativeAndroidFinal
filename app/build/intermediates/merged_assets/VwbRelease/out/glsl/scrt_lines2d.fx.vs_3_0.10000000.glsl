uniform highp mat4 matProj;
uniform highp vec4 screenSize;
uniform highp mat4 matWorldView;
uniform highp mat4 matWorldViewProj;
uniform highp mat4 matDataTransform;
uniform highp vec4 PenThickness;
uniform highp vec4 PenColor;
attribute highp vec3 vPosition;
attribute highp vec3 vTexCoord0;
attribute highp vec4 vColor1;
attribute highp vec3 vTexCoord1;
attribute highp vec4 vColor2;
attribute highp vec4 vTexCoord4;
varying highp vec4 xlv_COLOR0;
varying highp vec3 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  highp mat4 tmpvar_2;
  tmpvar_2 = (matWorldView * matProj);
  highp vec3 tmpvar_3;
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  highp float fLerpEdge_6;
  highp float tmpvar_7;
  tmpvar_7 = vTexCoord4.x;
  fLerpEdge_6 = vTexCoord4.z;
  highp vec4 tmpvar_8;
  tmpvar_8 = mix (vColor2, vColor1, vec4(((1.0 - vTexCoord4.y) * PenThickness.z)));
  highp float tmpvar_9;
  tmpvar_9 = abs(vTexCoord4.w);
  if ((tmpvar_9 > 0.0)) {
    highp vec2 tmpvar_10;
    tmpvar_10.x = matDataTransform[0].x;
    tmpvar_10.y = matDataTransform[1].y;
    highp vec2 tmpvar_11;
    tmpvar_11.x = matDataTransform[0].x;
    tmpvar_11.y = matDataTransform[1].y;
    highp vec3 tmpvar_12;
    tmpvar_12.z = 0.0;
    tmpvar_12.xy = ((vTexCoord1.xy - vTexCoord0.xy) * tmpvar_11);
    highp vec3 tmpvar_13;
    tmpvar_13.z = 0.0;
    tmpvar_13.xy = ((vTexCoord0.xy - vPosition.xy) * tmpvar_10);
    highp vec3 tmpvar_14;
    tmpvar_14 = ((tmpvar_12.yzx * tmpvar_13.zxy) - (tmpvar_12.zxy * tmpvar_13.yzx));
    if ((tmpvar_14.z > 0.0)) {
      fLerpEdge_6 = -(vTexCoord4.z);
    };
  };
  tmpvar_4.xy = mix (vTexCoord0.xy, vTexCoord1.xy, vTexCoord4.yy);
  tmpvar_5.xy = mix (vTexCoord1.xy, vTexCoord0.xy, vTexCoord4.yy);
  highp vec4 tmpvar_15;
  tmpvar_15.x = (PenThickness.x * fLerpEdge_6);
  tmpvar_15.y = tmpvar_7;
  tmpvar_15.z = PenThickness.x;
  tmpvar_15.w = (mix (vTexCoord0.z, vTexCoord1.z, abs(vTexCoord4.y)) / PenThickness.y);
  if ((vTexCoord4.w > 0.0)) {
    tmpvar_4.xy = vTexCoord0.xy;
    tmpvar_5.xy = vPosition.xy;
  };
  highp vec4 tmpvar_16;
  tmpvar_16.xy = tmpvar_4.xy;
  tmpvar_16.zw = tmpvar_5.xy;
  highp vec4 tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.x = matDataTransform[0].x;
  tmpvar_18.y = matDataTransform[1].y;
  tmpvar_18.z = matDataTransform[0].x;
  tmpvar_18.w = matDataTransform[1].y;
  highp vec4 tmpvar_19;
  tmpvar_19.x = matDataTransform[0].w;
  tmpvar_19.y = matDataTransform[1].w;
  tmpvar_19.z = matDataTransform[0].w;
  tmpvar_19.w = matDataTransform[1].w;
  tmpvar_17 = ((tmpvar_16 * tmpvar_18) + tmpvar_19);
  tmpvar_4.xy = tmpvar_17.xy;
  tmpvar_5.xy = tmpvar_17.zw;
  highp vec4 tmpvar_20;
  tmpvar_20.zw = vec2(0.0, 1.0);
  tmpvar_20.xy = tmpvar_3.xy;
  tmpvar_1 = (tmpvar_20 * tmpvar_2);
  highp vec4 tmpvar_21;
  tmpvar_21 = tmpvar_15;
  highp vec4 tmpvar_22;
  tmpvar_22 = vec4(0.0, 0.0, 0.0, 0.0);
  highp vec4 outPosition_23;
  highp vec4 tmpvar_24;
  tmpvar_24.zw = vec2(0.0, 1.0);
  tmpvar_24.xy = tmpvar_4.xy;
  highp vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_24 * matWorldViewProj);
  outPosition_23 = (tmpvar_25 / abs(tmpvar_25.w));
  highp vec4 tmpvar_26;
  tmpvar_26.zw = vec2(0.0, 1.0);
  tmpvar_26.xy = tmpvar_5.xy;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * matWorldViewProj);
  highp vec2 tmpvar_28;
  tmpvar_28 = normalize(((tmpvar_27 / 
    abs(tmpvar_27.w)
  ).xy - outPosition_23.xy));
  outPosition_23.x = (outPosition_23.x - ((tmpvar_15.x * screenSize.z) * tmpvar_28.y));
  outPosition_23.y = (outPosition_23.y + ((tmpvar_15.x * screenSize.w) * tmpvar_28.x));
  if ((PenThickness.x <= 1.0)) {
    tmpvar_21.y = 0.5;
  };
  tmpvar_22 = (tmpvar_8 * PenColor);
  highp vec3 tmpvar_29;
  tmpvar_29.x = tmpvar_21.y;
  tmpvar_29.y = tmpvar_21.w;
  tmpvar_29.z = tmpvar_21.z;
  tmpvar_1.xzw = outPosition_23.xzw;
  tmpvar_1.y = -(outPosition_23.y);
  gl_Position = tmpvar_1;
  xlv_COLOR0 = tmpvar_22;
  xlv_TEXCOORD0 = tmpvar_29;
  xlv_TEXCOORD1 = vec2(0.0, 0.0);
}

